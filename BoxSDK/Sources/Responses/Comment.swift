//
//  Comment.swift
//  BoxSDK-iOS
//
//  Created by Cary Cheng on 5/30/19.
//  Copyright Â© 2019 Box. All rights reserved.
//

import Foundation

/// Message generated by Box users. Each message is tied to a specific file.
/// You can create comments independently or create them as responses to other comments.
public class Comment: BoxModel {
    // MARK: - Properties

    public private(set) var rawData: [String: Any]
    private static var resourceType: String = "comment"
    /// Box item type
    public var type: String

    // MARK: - Properties

    /// Identifier
    public let id: String
    /// Whether or not this comment is a reply to another comment.
    public let isReplyComment: Bool?
    /// The comment text that the user typed.
    public let message: String?
    /// The string representing the comment text with @mentions included. @mention format is @[id:username]
    /// where id is user_id and username is display name. Field is not included by default.
    public let taggedMessage: String?
    /// A mini user object representing the author of the comment.
    public let createdBy: User?
    /// The time this comment was created.
    public let createdAt: Date?
    /// The object this comment was placed on.
    public let item: CommentItem?
    /// The time this comment was last modified
    public let modifiedAt: Date?

    /// Initializer.
    ///
    /// - Parameter json: JSON dictionary.
    /// - Throws: Decoding error.
    public required init(json: [String: Any]) throws {
        guard let itemType = json["type"] as? String else {
            throw BoxCodingError(message: .typeMismatch(key: "type"))
        }

        guard itemType == Comment.resourceType else {
            throw BoxCodingError(message: .valueMismatch(key: "type", value: itemType, acceptedValues: [Comment.resourceType]))
        }

        rawData = json
        type = itemType

        id = try BoxJSONDecoder.decode(json: json, forKey: "id")
        message = try BoxJSONDecoder.optionalDecode(json: json, forKey: "message")
        taggedMessage = try BoxJSONDecoder.optionalDecode(json: json, forKey: "tagged_message")
        createdBy = try BoxJSONDecoder.optionalDecode(json: json, forKey: "created_by")
        createdAt = try BoxJSONDecoder.optionalDecodeDate(json: json, forKey: "created_at")
        modifiedAt = try BoxJSONDecoder.optionalDecodeDate(json: json, forKey: "modified_at")
        item = try BoxJSONDecoder.optionalDecode(json: json, forKey: "item")
        isReplyComment = try BoxJSONDecoder.optionalDecode(json: json, forKey: "is_reply_comment")
    }
}
